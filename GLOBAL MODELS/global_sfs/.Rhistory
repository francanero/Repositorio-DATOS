library(dplyr) #manipulacion datos
library(mlr)
library(randomForest)
setwd("D:/Doctorado/spec_lab_r/")
datos <- read.csv2("D:/Doctorado/estadisticos_tesis/datos.csv")
raw <- read.csv2("raw.csv", sep = ",", dec = ".")
raw <- raw[3:length(raw)]
cr <- read.csv2("cr.csv", sep = ",", dec = ".")
cr <- cr[2:length(cr)]
msc <- read.csv2("msc.csv", sep = ",", dec = ".")
msc <- msc[2:length(msc)]
lista <- list(raw, cr, msc)
rm(raw)
rm(cr)
rm(msc)
coln <- seq(400, 2450, 1)
View(lista)
library(dplyr) #manipulacion datos
library(mlr)
library(randomForest)
setwd("D:/Doctorado/spec_lab_r/")
datos <- read.csv2("D:/Doctorado/estadisticos_tesis/datos.csv")
raw <- read.csv2("raw.csv", sep = ",", dec = ".")
raw <- raw[3:length(raw)]
cr <- read.csv2("cr.csv", sep = ",", dec = ".")
cr <- cr[2:length(cr)]
msc <- read.csv2("msc.csv", sep = ",", dec = ".")
msc <- msc[2:length(msc)]
coln <- seq(400, 2450, 1)
View(cr)
names(raw)
names(raw) <- paste0(names(raw), "raw")
names(raw)
names(cr) <- paste0(names(cr), "cr")
names(msc) <- paste0(names(msc), "msc")
View(cr)
db <- bind_cols(raw, cr, msc)
View(db)
ps.rf <- makeParamSet(makeDiscreteParam("ntree", values = c(100, 200, 300, 400, 500, 600, 700, 800, 900, 1000,
1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000)))
rdesc <- makeResampleDesc("CV", iters = 10)
ctrl <- makeFeatSelControlSequential(method = "sfs", alpha = 0.001)
#SOM
rf_mo_raw <- bind_cols(datos[[5]], db)
names(rf_mo_raw)[1] <- "mo"
mo.raw.task <- makeRegrTask(id = "nieves", data = rf_mo_raw, target = "mo")
res.mo.raw <- tuneParams("regr.randomForest", task = mo.raw.task, resampling = rdesc, par.set = ps.rf, measures = list(rmse, rsq),  control = makeTuneControlGrid())
lrn.mo.raw <- makeFeatSelWrapper(setHyperPars(makeLearner("regr.randomForest"), par.vals = res.mo.raw$x), resampling = rdesc, measures = list(rmse, rsq), control = ctrl, show.info = T)
mod.mo.raw <- train(lrn.mo.raw, task = mo.raw.task)
sfeats.mo.raw <- getFeatSelResult(mod.mo.raw)
sfeats.mo.raw$x
analyzeFeatSelResult(sfeats.mo.raw)
sd(datos[[5]])/(sfeats.mo.raw$y)
rf_carb_msc <- bind_cols(datos[[7]], db)
names(rf_carb_msc)[1] <- "carb"
carb.msc.task <- makeRegrTask(id = "nieves", data = rf_carb_msc, target = "carb")
res.carb.msc <- tuneParams("regr.randomForest", task = carb.msc.task, resampling = rdesc, par.set = ps.rf, measures = list(rmse, rsq),  control = makeTuneControlGrid())
plot(res.carb.msc[["opt.path"]][["env"]][["path"]][["ntree"]], res.carb.msc[["opt.path"]][["env"]][["path"]][["rmse.test.rmse"]], type = "l")
lrn.carb.msc <- makeFeatSelWrapper(setHyperPars(makeLearner("regr.randomForest"), par.vals = res.carb.msc$x), resampling = rdesc, measures = list(rmse, rsq), control = ctrl, show.info = T)
mod.carb.msc <- train(lrn.carb.msc, task = carb.msc.task)
sfeats.carb.msc <- getFeatSelResult(mod.carb.msc)
sfeats.carb.msc$x
analyzeFeatSelResult(sfeats.carb.msc)
sd(datos[[7]])/(sfeats.carb.msc$y)
#Clay
rf_clay_msc <- bind_cols(datos[[14]], db)
rf_clay_msc <- rf_clay_msc[-45,]
names(rf_clay_msc)[1] <- "clay"
clay.msc.task <- makeRegrTask(id = "nieves", data = rf_clay_msc, target = "clay")
res.clay.msc <- tuneParams("regr.randomForest", task = clay.msc.task, resampling = rdesc, par.set = ps.rf, measures = list(rmse, rsq),  control = makeTuneControlGrid())
plot(res.clay.msc[["opt.path"]][["env"]][["path"]][["ntree"]], res.clay.msc[["opt.path"]][["env"]][["path"]][["rmse.test.rmse"]], type = "l")
lrn.clay.msc <- makeFeatSelWrapper(setHyperPars(makeLearner("regr.randomForest"), par.vals = res.clay.msc$x), resampling = rdesc, measures = list(rmse, rsq), control = ctrl, show.info = T)
mod.clay.msc <- train(lrn.clay.msc, task = clay.msc.task)
sfeats.clay.msc <- getFeatSelResult(mod.clay.msc)
sfeats.clay.msc$x
res.clay.msc
sd(datos[[14]][-45])/res.clay.msc[["y"]][["rmse.test.rmse"]]
analyzeFeatSelResult(sfeats.clay.msc)
sd(datos[[14]][-45])/(sfeats.clay.msc$y)
save.image("D:/Doctorado/spec_lab_r/global/global_sfs.RData")
res.mo.raw$x
res.carb.raw$x
res.carb.msc$x
res.clay.msc$x
plot(res.carb.msc[["opt.path"]][["env"]][["path"]][["ntree"]], res.carb.msc[["opt.path"]][["env"]][["path"]][["rmse.test.rmse"]], type = "l")
View(res.mo.raw)
sd(datos[[5]])/res.mo.raw[["y"]][["rmse.test.rmse"]]
analyzeFeatSelResult(sfeats.mo.raw)
sd(datos[[5]])/(sfeats.mo.raw$y)
res.carb.msc
sd(datos[[7]])/8.8173188
res.clay.msc
sd(datos[[14]][-45])/res.clay.msc[["y"]][["rmse.test.rmse"]]
analyzeFeatSelResult(sfeats.carb.msc)
sd(datos[[7]])/(sfeats.carb.msc$y)
analyzeFeatSelResult(sfeats.mo.raw)
analyzeFeatSelResult(sfeats.clay.msc)
sd(datos[[14]][-45])/(sfeats.clay.msc$y)
setwd("D:/Doctorado/proy_origin/")
mod.mo.raw[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]]
setwd("D:/Doctorado/proy_origin/")
g.mo <- data.frame(datos[[5]], mod.mo.raw[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]])
names(g.mo) <- c("obs", "pred")
write.csv2(g.mo, file = "mo_glob.csv")
g.carb <- data.frame(datos[[7]], mod.carb.msc[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]])
names(g.carb) <- c("obs", "pred")
write.csv2(g.carb, file = "carb_glob.csv")
g.clay <- data.frame(datos[[14]][-45], mod.clay.msc[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]])
names(g.clay) <- c("obs", "pred")
write.csv2(g.clay, file = "clay_glob.csv")
setwd("D:/Doctorado/ss_scaterplot/")
res.mo.raw
View(res.mo.raw)
mod.mo.raw[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]]
g.mo <- data.frame(datos[[5]], mod.mo.raw[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]])
names(g.mo) <- c("obs", "pred")
write.csv2(g.mo, file = "sfs_mo.csv")
g.clay <- data.frame(datos[[14]][-45], mod.clay.msc[["learner.model"]][["next.model"]][["learner.model"]][["predicted"]])
names(g.clay) <- c("obs", "pred")
write.csv2(g.clay, file = "clay_sfs.csv")
write.csv2(g.clay, file = "sfs_clay.csv")
View(mod.carb.msc)
View(res.carb.msc)
View(mod.mo.raw)
View(mod.clay.msc)
View(mod.carb.msc)
save.image("J:/paper_espectroscopia_suelos/datos/global/sfs.RData")
View(sfeats.clay.msc)
sfeats.clay.msc[["x"]]
